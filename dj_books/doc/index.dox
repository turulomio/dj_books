/*! \mainpage djBooks

Introduction
============

djBooks is an opensource personal library manager.

It was developed to learn django programming.

Development
===========
- Turulomio (Idea y development)

Software used to develop Xulpymoney
===================================

<a target="_blank" href="https://eric-ide.python-projects.org/index.html">Eric</a> is used as the main IDE

Xulpymoney depends on the following software:
- <a target="_blank" href="https://www.python.org/">Python3</a>, as the main programming language.
- <a target="_blank" href="https://www.djangoproject.com/">Django</a>, as the web framework.



\page "Migrations"

If we make changes in app model we must create migrations with
@code
python3 manage.py makemigrations

@endcode

\page "Django Shell"

Get user permissions
====================

@code
from django.contrib.auth.models import User
root = User.objects.get(username="root")
root.get_all_permissions()
{'auth.delete_group', 'admin.change_logentry', 'auth.add_user', 'books.add_book', 'books.change_filebooks', 'admin.add_logentry', 'books.delete_valoration', 'contenttypes.change_contenttype', 'books.add_filebooks', 'books.change_book', 'sessions.change_session', 'books.add_author', 'auth.add_group', 'auth.delete_user', 'books.add_valoration', 'admin.delete_logentry', 'books.change_valoration', 'books.delete_author', 'books.delete_book', 'books.delete_filebooks', 'books.add_profile', 'auth.add_permission', 'books.change_profile', 'contenttypes.delete_contenttype', 'auth.change_permission', 'books.delete_profile', 'auth.delete_permission', 'auth.change_group', 'contenttypes.add_contenttype', 'sessions.delete_session', 'sessions.add_session', 'books.change_author', 'auth.change_user'}
@endcode

\page "Installation procedure"

Installation Initial data
=========================

Creating an app, sometimes require initial data creation. For example Grooup permissions

To create we can make a migration to insert data programatically


@code
python manage.py makemigrations --empty yourappname
@endcode

It generates something like

@code
Migrations for 'books':
  books/migrations/0005_auto_20180605_1942.py

@endcode

Now we can add now code

Installation
============

In postgresql, first we create database

@code
createdb -U postgres library_borrar
@endcode

We edit django/setting.py to set connection information

We run

@code
python manage.py migrate
python manage.py createsuperuser
python manage.py runserver
@endcode

Installation in apache
======================


You must configure apache with mod_wsgi support. In gentoo
@code
emerge -v apache mod_wsgi
@endcode

Then I had to add in /etc/conf.d/apache2 -D WSGI

In gentoo I need to add this code in /etc/apache2/vhosts.d/default_vhost.include

@code
 WSGIScriptAlias /dj_books /var/www/localhost/htdocs/dj_books/dj_books/wsgi.py
# WSGIDaemonProcess myothersite.example.com processes=2 threads=15 display-name=%{GROUP} python-home=/var/www/vhosts/myothersite/venv/bin/python3.5 0
# WSGIProcessGroup myothersite.example.com 
 
<directory /var/www/localhost/htdocs/dj_books> 
   AllowOverride all 
   Require all granted 
   Options FollowSymlinks 
</directory> 
 
# Alias /static/ /var/www/vhosts/myothersite/static/ 
 
# <Directory /var/www/vhosts/myothersite/static> 
#  Require all granted 
# </Directory> 
@endcode

@note
In WSGIScriptAlias notice no trailing slash after the 2nd token, "/dj_books"
@endnote


I had to add this line before environ line in djbooks/wsgi.py
@code
import sys
sys.path.append('/var/www/localhost/htdocs/dj_books/') 
@endcode


Then I restart apache and it works
@code
/etc/init.d/apache2 restart
@endcode

*/